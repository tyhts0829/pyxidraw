[build-system]
requires = ["setuptools>=61", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "pyxidraw"
version = "0.0.0"
description = "Procedural line-geometry framework with effects and realtime rendering"
readme = "README.md"
requires-python = ">=3.10"
authors = [{name = "PyXidraw contributors"}]
license = {text = "MIT"}

# ランタイム最小依存
dependencies = [
  "numpy>=1.23",
]

[project.optional-dependencies]
# 開発用一括（ローカル/CI 両用）
dev = [
  "numpy",
  "pytest",
  "pytest-benchmark>=4.0.0",
  "hypothesis",
  "black",
  "isort",
  "ruff",
  "mypy",
  "pre-commit",
  "psutil>=5.9",
  "fonttools",
  "fontpens",
  "types-PyYAML",
  "imageio",
  "imageio-ffmpeg",
]
# 重い/任意依存をまとめたセット
optional = [
  "shapely",
  "numba",
  "mido",
  "fonttools",
  "fontpens",
  "imageio",
  "imageio-ffmpeg",
]

[tool.setuptools]
package-dir = {"" = "src"}

# src 配下の通常パッケージに加え、リポジトリ直下の `tools` パッケージも配布対象に含める
# （CI の optional テストで `from tools.gen_g_stubs import ...` を解決するため）。
[tool.setuptools.packages.find]
where = ["src", "."]
include = ["*", "tools*"]

[tool.black]
line-length = 100
target-version = ["py310"]
extend-exclude = '.*/src/api/__init__\.pyi$'

[tool.isort]
profile = "black"
line_length = 100

[tool.ruff]
line-length = 100
target-version = "py310"
exclude = [
  ".git",
  ".hypothesis",
  ".pytest_cache",
  "data",
  "benchmark_results",
]

[tool.ruff.lint]
select = ["F401", "F841", "E9"]

[tool.mypy]
# 外部ライブラリの型スタブ欠如による雑音を抑制
ignore_missing_imports = true
python_version = "3.10"
# リポジトリ全体を対象にした実行でもノイズを抑えるための除外
# （必要になったら段階的に外していきます）
exclude = "(^|/)(benchmarks|docs|screenshots|tools|scripts|tutorials|benchmark_results|.pytest_cache)/|^src/api/__init__\\.pyi$"
# 当面は最小範囲から型検査を開始（段階的に拡大する）
files = [
  "src/util/utils.py",
]
